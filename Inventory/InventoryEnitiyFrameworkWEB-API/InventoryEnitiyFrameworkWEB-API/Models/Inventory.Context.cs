//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InventoryEnitiyFrameworkWEB_API.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class InventoryEntities : DbContext
    {
        public InventoryEntities()
            : base("name=InventoryEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BankAccount> BankAccounts { get; set; }
        public virtual DbSet<Bank> Banks { get; set; }
        public virtual DbSet<BusinessDetail> BusinessDetails { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<City> Cities { get; set; }
        public virtual DbSet<Company> Companies { get; set; }
        public virtual DbSet<ContraEntry> ContraEntries { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<Customer_Item_Invoice> Customer_Item_Invoice { get; set; }
        public virtual DbSet<CustomerPayment> CustomerPayments { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<DeliveryChallan> DeliveryChallans { get; set; }
        public virtual DbSet<Expens> Expenses { get; set; }
        public virtual DbSet<ForgetPassword> ForgetPasswords { get; set; }
        public virtual DbSet<Item> Items { get; set; }
        public virtual DbSet<Language> Languages { get; set; }
        public virtual DbSet<LogIn> LogIns { get; set; }
        public virtual DbSet<Menu> Menus { get; set; }
        public virtual DbSet<NewStockItem> NewStockItems { get; set; }
        public virtual DbSet<NewStock> NewStocks { get; set; }
        public virtual DbSet<NewUnit> NewUnits { get; set; }
        public virtual DbSet<Notification> Notifications { get; set; }
        public virtual DbSet<Organisation> Organisations { get; set; }
        public virtual DbSet<PartyPayment> PartyPayments { get; set; }
        public virtual DbSet<PaymentCustomerPayment> PaymentCustomerPayments { get; set; }
        public virtual DbSet<Payment> Payments { get; set; }
        public virtual DbSet<PaymentSupplier> PaymentSuppliers { get; set; }
        public virtual DbSet<Percentage> Percentages { get; set; }
        public virtual DbSet<PurchaseInvoice> PurchaseInvoices { get; set; }
        public virtual DbSet<QuantityAndPrice> QuantityAndPrices { get; set; }
        public virtual DbSet<RoleOfUser> RoleOfUsers { get; set; }
        public virtual DbSet<SalesInvoiceCustomer> SalesInvoiceCustomers { get; set; }
        public virtual DbSet<SalesInvoice> SalesInvoices { get; set; }
        public virtual DbSet<Service> Services { get; set; }
        public virtual DbSet<State> States { get; set; }
        public virtual DbSet<StockInHand> StockInHands { get; set; }
        public virtual DbSet<SubMenu> SubMenus { get; set; }
        public virtual DbSet<Supplier_Item_Invoice> Supplier_Item_Invoice { get; set; }
        public virtual DbSet<SupplierPayment> SupplierPayments { get; set; }
        public virtual DbSet<Supplier> Suppliers { get; set; }
        public virtual DbSet<Tax> Taxes { get; set; }
        public virtual DbSet<Unit> Units { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Country_State_City_View> Country_State_City_View { get; set; }
        public virtual DbSet<Customer_View> Customer_View { get; set; }
        public virtual DbSet<ServicesView> ServicesViews { get; set; }
        public virtual DbSet<Supplier_View> Supplier_View { get; set; }
        public virtual DbSet<View_Bank_Accounts> View_Bank_Accounts { get; set; }
        public virtual DbSet<View_Banks> View_Banks { get; set; }
        public virtual DbSet<View_Categories> View_Categories { get; set; }
        public virtual DbSet<View_Companies> View_Companies { get; set; }
        public virtual DbSet<View_Country> View_Country { get; set; }
        public virtual DbSet<View_Customer_Item_Invoice> View_Customer_Item_Invoice { get; set; }
        public virtual DbSet<View_Customer_Ledger> View_Customer_Ledger { get; set; }
        public virtual DbSet<View_Customer_Payment_SalesInvoice> View_Customer_Payment_SalesInvoice { get; set; }
        public virtual DbSet<View_CustomerCheque> View_CustomerCheque { get; set; }
        public virtual DbSet<view_CustomerPayment> view_CustomerPayment { get; set; }
        public virtual DbSet<View_Item> View_Item { get; set; }
        public virtual DbSet<View_Item_For_Delivery_Challan> View_Item_For_Delivery_Challan { get; set; }
        public virtual DbSet<View_New_Units> View_New_Units { get; set; }
        public virtual DbSet<View_PartyPayment> View_PartyPayment { get; set; }
        public virtual DbSet<View_Role> View_Role { get; set; }
        public virtual DbSet<View_State> View_State { get; set; }
        public virtual DbSet<View_Supplier_Item_Invoice> View_Supplier_Item_Invoice { get; set; }
        public virtual DbSet<View_Supplier_Ledger> View_Supplier_Ledger { get; set; }
        public virtual DbSet<View_Supplier_PurcchaseIvoice_SupplierPayment> View_Supplier_PurcchaseIvoice_SupplierPayment { get; set; }
        public virtual DbSet<View_SupplierCheque> View_SupplierCheque { get; set; }
        public virtual DbSet<View_SupplierPayment> View_SupplierPayment { get; set; }
        public virtual DbSet<View_Unit> View_Unit { get; set; }
        public virtual DbSet<View_Users> View_Users { get; set; }
        public virtual DbSet<View_Users_Role> View_Users_Role { get; set; }
        public virtual DbSet<View_StockReconciliations> View_StockReconciliations { get; set; }
    
        public virtual ObjectResult<SP_CustomerItemWiseDates_Result> SP_CustomerItemWiseDates(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, Nullable<int> custID, Nullable<int> itemID)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var custIDParameter = custID.HasValue ?
                new ObjectParameter("custID", custID) :
                new ObjectParameter("custID", typeof(int));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("itemID", itemID) :
                new ObjectParameter("itemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CustomerItemWiseDates_Result>("SP_CustomerItemWiseDates", startdateParameter, enddateParameter, custIDParameter, itemIDParameter);
        }
    
        public virtual ObjectResult<Sp_Daily_Profit_And_Loss_Result> Sp_Daily_Profit_And_Loss(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Daily_Profit_And_Loss_Result>("Sp_Daily_Profit_And_Loss", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<SP_Daily_Sales_Registers_Result> SP_Daily_Sales_Registers(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Daily_Sales_Registers_Result>("SP_Daily_Sales_Registers", startdateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<SP_SelectDateWiseData_Result> SP_SelectDateWiseData(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SelectDateWiseData_Result>("SP_SelectDateWiseData", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<SP_VAT_Result> SP_VAT(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_VAT_Result>("SP_VAT", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<SP_ExpensesReport_Result> SP_ExpensesReport(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ExpensesReport_Result>("SP_ExpensesReport", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_Customer_Wise_ReportsNew(Nullable<int> cust_id, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate)
        {
            var cust_idParameter = cust_id.HasValue ?
                new ObjectParameter("cust_id", cust_id) :
                new ObjectParameter("cust_id", typeof(int));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_Customer_Wise_ReportsNew", cust_idParameter, startdateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_Customer_Wise_Reports(Nullable<int> cust_id, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate)
        {
            var cust_idParameter = cust_id.HasValue ?
                new ObjectParameter("cust_id", cust_id) :
                new ObjectParameter("cust_id", typeof(int));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_Customer_Wise_Reports", cust_idParameter, startdateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<SP_CustomerWiseReports_Result> SP_CustomerWiseReports(Nullable<int> cust_id, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate)
        {
            var cust_idParameter = cust_id.HasValue ?
                new ObjectParameter("cust_id", cust_id) :
                new ObjectParameter("cust_id", typeof(int));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CustomerWiseReports_Result>("SP_CustomerWiseReports", cust_idParameter, startdateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<SP_Stock_Reconcilation_Result> SP_Stock_Reconcilation(Nullable<int> id, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Stock_Reconcilation_Result>("SP_Stock_Reconcilation", idParameter, startdateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<SP_Supplier_Wise_Reports_Result> SP_Supplier_Wise_Reports(Nullable<int> supplier_id, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate)
        {
            var supplier_idParameter = supplier_id.HasValue ?
                new ObjectParameter("supplier_id", supplier_id) :
                new ObjectParameter("supplier_id", typeof(int));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Supplier_Wise_Reports_Result>("SP_Supplier_Wise_Reports", supplier_idParameter, startdateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<SP_MothlyProfitAndLossReport_Result> SP_MothlyProfitAndLossReport(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MothlyProfitAndLossReport_Result>("SP_MothlyProfitAndLossReport", startdateParameter, enddateParameter);
        }
    }
}
